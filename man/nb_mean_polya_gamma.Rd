% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/neg_binom_mean_polya_gamma.R
\name{nb_mean_polya_gamma}
\alias{nb_mean_polya_gamma}
\title{Solve Negative Binomial mean problem by polya-gamma augmentation}
\usage{
nb_mean_polya_gamma(
  x,
  r = 100,
  ebnm_params = NULL,
  tol = 1e-05,
  maxiter = 1000,
  est_r = FALSE,
  update_r_every = 1,
  m_init = NULL,
  v_init = NULL
)
}
\arguments{
\item{x}{data vector}

\item{r}{NB binomial parameter r}

\item{ebnm_params}{a list of ebnm parameters}

\item{tol}{tolerance for stopping the updates}

\item{maxiter}{max number of iterations}

\item{est_r}{whether estimate r. For Poisson data, set it to False.}

\item{update_r_every}{if estimate r, how often to update it}
}
\value{
a list of
 \item{posterior:}{posteriorMean_latent is the posterior mean of mu, posteriorMean_mean is for Poisson mean, posteriorMean_log_mean is for Poisson log mean}
 \item{fitted_g:}{estimated prior}
 \item{obj_value:}{objective function values}
 \item{fit:}{fitted object from `ebnm`}
}
\description{
Solve Negative Binomial mean problem by polya-gamma augmentation
}
\details{
The problem is
\deqn{x_i\sim Poisson(\log(1+\exp(\mu_i))),}
\deqn{\mu_i\sim g(\cdot).}
}
\examples{
n = 100
mu = rnorm(n)
p = exp(mu)/(1+exp(mu))
r = 10
x = rnbinom(n,r,1-p)
nb_mean_polya_gamma(x,r=r)
}
